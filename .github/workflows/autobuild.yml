name: build installer images
on: push
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check:
    runs-on: ubuntu-latest
    container: 'debian:11'
    outputs:
      needed: ${{ steps.flag-check.outputs.needed }}
    steps:
      - name: install curl
        run: apt-get update; apt-get -y install curl
      - name: check for the build needed flag
        id: flag-check
        run: echo "::set-output name=needed::$(curl -sL https://github.com/1000001101000/Debian_on_Buffalo/raw/master/.rebuild 2>/dev/null)"
  
  build:
    needs: check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "${{ matrix.version }}/installer_images/build/"
    container: 'debian:11'
    strategy:
      matrix:
        version: ["Stretch","Buster","Bullseye"]
        arch: ["armel","armhf"]
    if: ${{ needs.check.outputs.needed == 'yes' }}
    steps:
      - uses: actions/checkout@v3
      - uses: peterjgrainger/action-create-branch@v2.0.1
        with:
          branch: ${{matrix.version}}-autobuild"
      - name: install prereqs
        run: apt-get update; apt-get -y install gzip rsync wget cpio faketime u-boot-tools libarchive-cpio-perl devio curl git gawk xz-utils
      - name: build ${{ matrix.version }} ${{ matrix.arch }} installer
        run: ./generate_images_${{matrix.arch}}.sh
      - name: make sure target directory exists
        run: mkdir ../${{matrix.arch}}_devices || exit 0
      - name: copy ${{ matrix.version }} ${{ matrix.arch }} files into place
        run:  cp -v output/initrd.buffalo.${{matrix.arch}} ../${{matrix.arch}}_devices/initrd.buffalo;cp -v output/uImage*buffalo.* ../${{matrix.arch}}_devices/
      - name: record base installer hash
        run: cat ${{matrix.arch}}-files/initrd.gz | md5sum > last_build_${{matrix.arch}}.txt
      - name: status
        run: git status
