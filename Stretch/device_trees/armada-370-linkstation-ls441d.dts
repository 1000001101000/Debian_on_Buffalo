/*
 * Device Tree file for Buffalo Linkstation LS441D
 *
 * Toha <tohenk@yahoo.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>
#include "armada-370.dtsi"

/ {
	model = "Buffalo Linkstation LS441D";
	compatible = "buffalo,ls441d", "marvell,armada370", "marvell,armada-370-xp";

	chosen {
		bootargs = "earlyprintk boot=local";
		stdout-path = "serial0:115200n8";
	};

	memory {
		device_type = "memory";
		reg = <0x00000000 0x20000000>; /* 512 MB */
	};

	soc {
		ranges = <MBUS_ID(0xf0, 0x01) 0 0xd0000000 0x100000
			  MBUS_ID(0x01, 0xe0) 0 0xfff00000 0x100000>;

		pcie-controller {
			status = "okay";

			pcie@1,0 {
				/* Port 0, Lane 0 */
				status = "okay";
			};
			pcie@2,0 {
				/* Port 1, Lane 0 */
				status = "okay";
			};
		};

		internal-regs {
			rtc@10300 {
				status = "disabled";
			};

			serial@12000 {
				status = "okay";
			};

			timer@20300 {
				status = "okay";
			};

			mdio {
				/* Marvell 88E1518 */
				phy0: ethernet-phy@0 {
					reg = <0>;
					marvell,reg-init = <0x3 0x10 0xf000 0x081e>,
							   <0x3 0x11 0xfff0 0x0001>;
					compatible = "marvell,88e1518", "ethernet-phy-ieee802.3-c22";
				};
			};

			ethernet@74000 {
				status = "okay";
				phy = <&phy0>;
				phy-mode = "rgmii-id";
			};			

			mvsdio@d4000 {
				pinctrl-0 = <&sdio_pins3>;
				pinctrl-names = "default";
				status = "okay";
				broken-cd;
			};

			usb@50000 {
				status = "okay";
			};

			i2c@11000 {
				status = "okay";
				clock-frequency = <100000>;

				rs5c372: rs5c372@32 {
					compatible = "rs5c372a";
					reg = <0x32>;
				};
			};

			nand@d0000 {
				status = "okay";
				num-cs = <1>;
				marvell,nand-keep-config;
				marvell,nand-enable-arbiter;
				nand-on-flash-bbt;

				/* Use Hardware BCH ECC */
				//nand-ecc-strength = <4>;
				//nand-ecc-step-size = <512>;

				partition@0 {
					label = "boot";
					//reg = <0x0 0x02000000>;
					reg = <0x00000000 0x02000000>;  /* 32MB */
				};
				partition@02100000 {
					label = "rootfs";
					//reg = <0x02100000 0x1df00000>;
					reg = <0x02000000 0x1e000000>;  /* 480MB */
				};
			};
		};
	};

/*	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-0 = <&usb_vbus>;
		pinctrl-names = "default";

		usb_power: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "USB Power";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			enable-active-high;
			regulator-always-on;
			regulator-boot-on;
			gpio = <&gpio0 5 GPIO_ACTIVE_LOW>;
		};
	};
*/


	gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&alarm_led_pin &info_led_pin &power_led &err_led &info_led &func_red 
			&func_led_pin &sata1_led_pin &sata2_led_pin &hdd2_err_led &hdd3_err_led 
			&hdd_pwr0 &hdd_pwr1 &hdd_pwr2 &hdd_pwr3>;

		power-led {
			label = "ls441d:white:power";
			gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
	
		err-led {
			label = "ls441d:red:power";
			gpios = <&gpio1 28 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		info-led {
			label = "ls441d:orange:power";
			gpios = <&gpio1 22 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};


		white-func-led {
			label = "ls441d:white:func";
			gpios = <&gpio1 27 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		func-red {
			label = "ls441d:red:function";
			gpios = <&gpio0 9 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		red-hdd0err-led {
			label = "ls441d:red:hdd0err";
			gpios = <&gpio1 29 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};
		red-hdd1err-led {
			label = "ls441d:red:hdd1err";
			gpios = <&gpio1 30 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		hd1-power {
			label = "PowerHD2";
			gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		hd0-power {
			label = "PowerHD1";
			gpios = <&gpio0 8 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
		
		hd3-power {
			label = "PowerHD4";
			gpios = <&gpio1 16 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		hd2-power {
			label = "PowerHD3";
			gpios = <&gpio1 20 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
		
		hdd2-err-led {
			label = "ls441d:red:hdd2err";
			gpios = <&gpio1 26 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		hdd3-err-led {
			label = "ls441d:red:hdd3err";
			gpios = <&gpio1 15 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

	};

	restart_poweroff {
		compatible = "restart-poweroff";
	};

	//gpio-poweroff {
	//	compatible = "gpio-poweroff";
	//	pinctrl-0 = <&poweroff>;
	//	pinctrl-names = "default";
	//	gpios = <&gpio1 28 GPIO_ACTIVE_LOW>;
	//};


	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-0 = <&power_switch &func_button &hdd_hot0_n &hdd_hot1_n &hdd_hot2_n &hdd_hot3_n>;
		pinctrl-names = "default";

		power-switch {
			label = "Power Switch";
			linux,code = <KEY_POWER>;
			gpios = <&gpio0 15 GPIO_ACTIVE_LOW>;
		};
		func-button {
			label = "Function Button";
			linux,code = <KEY_OPTION>;
			gpios = <&gpio0 16 GPIO_ACTIVE_LOW>;
		};

		hdd0-hot {
			label = "Hard Disk 1 Present";
			linux,code = <KEY_PROG1>;
			gpios = <&gpio0 10 GPIO_ACTIVE_LOW>;
		};

		hdd1-hot {
			label = "Hard Disk 2 Present";
			linux,code = <KEY_PROG2>;
			gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;
		};

		hdd2-hot {
			label = "Hard Disk 3 Present";
			linux,code = <KEY_PROG3>;
			gpios = <&gpio1 18 GPIO_ACTIVE_LOW>;
		};

		hdd3-hot {
			label = "Hard Disk 4 Present";
			linux,code = <KEY_PROG4>;
			gpios = <&gpio1 19 GPIO_ACTIVE_LOW>;
		};


	};

	gpio-fan {
		compatible = "gpio-fan";
		pinctrl-0 = <&fan_low &fan_high &fan_lock>;
		pinctrl-names = "default";
		gpios = <&gpio0 14 GPIO_ACTIVE_LOW
		         &gpio0 13 GPIO_ACTIVE_LOW>;
		gpio-fan,speed-map = <0    3
		                      1500 2
		                      3250 1
		                      5000 0>;
		//alarm-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
	};
};

&spi0 {
	status = "okay";
	pinctrl-0 = <&spi0_pins2>;

	spi-flash@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "mx25l8005", "jedec,spi-nor";
		reg = <0>; /* Chip select 0 */
		spi-max-frequency = <50000000>;

		partition@00000 {
			label = "u-boot";
			reg = <0x00000 0xf0000>;
			read-only;
		};
		partition@f0000 {
			label = "u-boot-env";
			reg = <0xf0000 0x10000>;
		};
	};
};

&pinctrl {

	power_led: power-led {
		marvell,pins = "mpp5";
		marvell,function = "gpo";
	};

	/* ??? in */
	usb_oc_n: usb-oc-n {
		marvell,pins = "mpp6";
		marvell,function = "gpio";
	};
	
	/* out: default 0 */
	hdd_pwr1: hdd-pwr1 {
		marvell,pins = "mpp7";
		marvell,function = "gpo";
	};

	/* out: default 0 */
	hdd_pwr0: hdd-pwr0 {
		marvell,pins = "mpp8";
		marvell,function = "gpio";
	};

	func_red: func-red {
		marvell,pins = "mpp9";
		marvell,function = "gpo";
	};

	/* in */
	hdd_hot0_n: hdd-hot0-n {
		marvell,pins = "mpp10";
		marvell,function = "gpio";
	};

	/* in */
	hdd_hot1_n: hdd-hot1-n {
		marvell,pins = "mpp11";
		marvell,function = "gpio";
	};

	fan_lock: fan-lock {
		marvell,pins = "mpp12";
		marvell,function = "gpio";
	};

	fan_high: fan-high {
		marvell,pins = "mpp13";
		marvell,function = "gpio";
	};
	fan_low: fan-low {
		marvell,pins = "mpp14";
		marvell,function = "gpio";
	};
	power_switch: power-switch {
		marvell,pins = "mpp15";
		marvell,function = "gpio";
	};
	func_button: func-button {
		marvell,pins = "mpp16";
		marvell,function = "gpio";
	};
	
	/* ??? in */
	uart_en_n: uart-en-n {
		marvell,pins = "mpp31";
		marvell,function = "gpio";
	};
	
	/* out: default 0 */
	hdd3_err_led: hdd3-err-led {
		marvell,pins = "mpp47";
		marvell,function = "gpo";
	};	

	/* out: default 0 */
	hdd_pwr3: hdd-pwr3 {
		marvell,pins = "mpp49";
		marvell,function = "gpio";
	};	

	/* in */
	hdd_hot2_n: hdd-hot2-n {
		marvell,pins = "mpp50";
		marvell,function = "gpio";
	};

	/* in */
	hdd_hot3_n: hdd-hot3-n {
		marvell,pins = "mpp51";
		marvell,function = "gpio";
	};

	/* out: default 0 */
	hdd_pwr2: hdd-pwr2 {
		marvell,pins = "mpp52";
		marvell,function = "gpio";	
	};

	/* out: default 0 */
	info_led: info-led {
		marvell,pins = "mpp54";
		marvell,function = "gpo";
	};

	alarm_led_pin: alarm-led-pin {
		marvell,pins = "mpp55";
		marvell,function = "gpio";
	};

	info_led_pin: info-led-pin {
		marvell,pins = "mpp57";
		marvell,function = "gpio";
	};

	/* out: default 0 */
	hdd2_err_led: hdd2-err-led {
		marvell,pins = "mpp58";
		marvell,function = "gpio";
	};

	func_led_pin: func-led-pin {
		marvell,pins = "mpp59";
		marvell,function = "gpo";
	};

	/* out: default 0 */
	err_led: err-led {
		marvell,pins = "mpp60";
		marvell,function = "gpio";
	};

	sata1_led_pin: sata1-led-pin {
		marvell,pins = "mpp61";
		marvell,function = "gpo";
	};
	sata2_led_pin: sata2-led-pin {
		marvell,pins = "mpp62";
		marvell,function = "gpio";
	};
};
