--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -459,6 +459,8 @@
 	bool neta_armada3700;
 	u16 rx_offset_correction;
 	const struct mbus_dram_target_info *dram_target_info;
+
+	phys_addr_t regaddr;
 };
 
 /* The mvneta_tx_desc and mvneta_rx_desc structures describe the
@@ -3653,6 +3655,65 @@
 	.mac_link_up = mvneta_mac_link_up,
 };
 
+#define MARVELL_PHY_ID_88E1318S	0x01410e90
+#define MARVELL_PHY_ID_88E1518	0x01410dd1
+#define VDDO_PADS_VOLTAGE_OFFS 	0x184E0
+
+/* Armada 370/XP RGMII pins voltage is 3v3 as default. It must be set
+ * to 1v8 with Marvell 88E1318S/88E1518 PHYs since they only support
+ * this voltage. The connection will be randomly unstable otherwise.
+ */
+static void mvneta_fix_voltage(struct mvneta_port *pp)
+{
+	void __iomem *vddo_addr;
+	bool is_port0;
+	u32 reg, phyid;
+
+	/* 0x70000 is the port0, 0x74000 is the port1 */
+	is_port0 = !(pp->regaddr & GENMASK(14, 12));
+
+	/* Get the PHY ID */
+	phyid = pp->dev->phydev->phy_id;
+
+	/* base address: 0xf1000000 or 0xd0000000 */
+	vddo_addr = ioremap((pp->regaddr & GENMASK(31,24)) +
+			    VDDO_PADS_VOLTAGE_OFFS, 4);
+
+	 /* Set the RGMII pins voltage at the SoC to 1v8 */
+	if (phyid == MARVELL_PHY_ID_88E1318S ||
+	    phyid == MARVELL_PHY_ID_88E1518) {
+		if (of_machine_is_compatible("marvell,armada370")){
+			if (is_port0) {
+				reg = readl(vddo_addr);
+                               printk("phytest: Port0 Address %02X Value  %02X\n", vddo_addr, reg);
+				/* MPP pins 5 to 16 */
+				reg &= ~GENMASK(3,2);
+                               printk("phytest: Port0 Address %02X Value  %02X\n", vddo_addr, reg);
+			} else {
+				reg = readl(vddo_addr);
+				/* MPP pins 17 to 31 */
+				reg &= ~GENMASK(5,4);
+			}
+		}
+		else if (of_machine_is_compatible("marvell,armadaxp")) {
+			if (is_port0) {
+				reg = readl(vddo_addr);
+				/* MPP pins 0 to 11 */
+				reg &= ~GENMASK(1,0);
+			} else {
+				reg = readl(vddo_addr);
+				/* MPP pins 12 to 23 */
+				reg &= ~GENMASK(3,2);
+			}
+		}
+		else
+			return;
+
+		writel(reg, vddo_addr);
+		netdev_info(pp->dev, "VDDO voltage asserted: 1v8\n");
+	}
+}
+
 static int mvneta_mdio_probe(struct mvneta_port *pp)
 {
 	struct ethtool_wolinfo wol = { .cmd = ETHTOOL_GWOL };
@@ -3661,6 +3720,9 @@
 	if (err)
 		netdev_err(pp->dev, "could not attach PHY: %d\n", err);
 
+	if (of_machine_is_compatible("marvell,armada-370-xp"))
+		mvneta_fix_voltage(pp);
+
 	phylink_ethtool_get_wol(pp->phylink, &wol);
 	device_set_wakeup_capable(&pp->dev->dev, !!wol.supported);
 
@@ -4553,6 +4615,7 @@
 	pp->comphy = comphy;
 	pp->phy_interface = phy_mode;
 	pp->dn = dn;
+	pp->regaddr = pdev->resource->start;
 
 	pp->rxq_def = rxq_def;
 	pp->indir[0] = rxq_def;

